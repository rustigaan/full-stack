ARG RUST_TAG=1.64.0
ARG APP_SNAKE=example
ARG APP_KEBAB=example
FROM woc/${APP_KEBAB}-core-compiled:previous as build

# Support incremental builds in AWS codebuild

# docker pull woc/${APP_KEBAB}-core-compiled:previous \
#   || ( docker pull rust:1.64.0 && docker tag rust:1.64.0 woc/${APP_KEBAB}-core-compiled:previous )
# docker rmi woc/${APP_KEBAB}-core-compiled:next || true
# cd "${PROJECT}"
# docker build --tag woc/${APP_KEBAB}-core-compiled:next -f docker/app/Dockerfile-compile . \
#   && docker tag woc/${APP_KEBAB}-core-compiled:next woc/${APP_KEBAB}-core-compiled:previous
# docker build --tag woc/${APP_KEBAB}-core:0.1.0-SNAPSHOT -f docker/app/Dockerfile-distribution docker/app

WORKDIR /usr/src/${APP_SNAKE}
COPY monolith/ monolith/
COPY proto/ monolith/proto/
COPY Cargo.lock ./
RUN bash -c 'echo -e "[workspace]\\n\\nmembers = [\\n  \"monolith\"]" > Cargo.toml'
RUN bash -c 'touch monolith/src/proto_{admin,model,signup,${APP_SNAKE}}.rs monolith/src/dendrite_config.rs'

FROM woc/rust:1.64.0

RUN rustup component add rustfmt

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN apt-get install -y cmake protobuf-compiler

WORKDIR /usr/src/${APP_SNAKE}/monolith

COPY --from=build /usr/src/${APP_SNAKE}/ /usr/src/${APP_SNAKE}/

RUN cargo install --path .

CMD ["${APP_SNAKE}"]